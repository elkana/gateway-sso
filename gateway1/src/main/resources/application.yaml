spring:
  application:
      name: gateway1
# TODO this should be set externally, e.g. in a docker-compose file      
  cloud:
    gateway.server:
        webmvc:
          routes:
          - id: hello-route
            uri: ${HELLO_SERVICE_URL:http://localhost:1010}
            predicates:
              - Path=/hello/**
          - id: vaadin-ui-route
            uri: ${VAADIN_UI_URL:http://localhost:2600}            
            predicates:
              - Path=/vaadin-ui/**
          - id: vaadin-sso-route
            uri: ${VAADIN_SSO_URL:http://localhost:2601}
            predicates:
              - Path=/vaadin-sso1/**
            filters:
              - TokenRelay=
              # RemoveRequestHeader causes issues with SSO 20260614
              # - RemoveRequestHeader=Cookie
          - id: jenkins-route
            uri: ${JENKINS_URL:http://10.10.3.27:7778}
            predicates:
              - Path=/jenkins/**
          - id: apiLosApSvcRoute
            uri: ${API_URL:http://localhost:2501}            
            predicates:
              - Path=/api/legacy/los-ap-data/**
          - id: cashier-sso-route
            uri: http://localhost:2611
            predicates:
              - Path=/cashier-sso/**
            filters:
              - TokenRelay=
              # - RemoveRequestHeader=Cookie
      
        # globalcors:
        #   cors-configurations:
        #     '[/**]':
        #       allowedOrigins: "*"
        #       allowedMethods: 
        #         - GET
        #         - POST
        #         - DELETE
        #       allowedHeaders:
        #         - content-type
        #         - Authorization
        #         - ApiKey
              #   - Content-Type
              # allow-credentials: true  
              # allowedMethods: "*"  
        # httpclient:
        #   connect-timeout: 2000

  security:
    oauth2:
      client:
        registration:
          keycloak:
            provider: keycloak
            client-id: los-client
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            authorization-grant-type: authorization_code
            scope: openid,profile,email,roles
        provider:
          keycloak:
            issuer-uri: https://ppusso.devoutsys.com/realms/los-realm
            token-uri: https://ppusso.devoutsys.com/realms/los-realm/protocol/openid-connect/token
            user-name-attribute: preferred_username
      resourceserver:
        jwt:
          issuer-uri: https://ppusso.devoutsys.com/realms/los-realm
          # jwk-set-uri: https://ppusso.devoutsys.com/realms/los-realm/protocol/openid-connect/certs
        opaquetoken:
          client-id: los-client
          client-secret: 12345678-123-cantnull
          introspection-uri: https://ppusso.devoutsys.com/realms/los-realm/protocol/openid-connect/token/introspect
